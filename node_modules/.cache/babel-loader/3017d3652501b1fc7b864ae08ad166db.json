{"ast":null,"code":"var _jsxFileName = \"/home/anita/Project/redux-counter/src/components/Counter.jsx\";\nimport { connect } from \"react-redux\";\nimport { DECREMENT, INCREMENT } from \"../redux/actions/action.constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = props => {\n  console.log(\"Props in counter\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count : \", props.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.incrementValue,\n      children: \"+ \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.decrementValue,\n      children: \" -\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}; //connect -- HOC higer order component\n// function -- input component --  another component\n// connect -- input Counter --- output Counter connected to store and redux\n\n\n_c = Counter;\n\nconst mapStateToProps = state => {\n  return {\n    count: state.count\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    incrementValue: () => {\n      return dispatch({\n        type: INCREMENT\n      });\n    },\n    decrementValue: () => {\n      return dispatch({\n        type: DECREMENT\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["connect","DECREMENT","INCREMENT","Counter","props","console","log","count","incrementValue","decrementValue","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"sources":["/home/anita/Project/redux-counter/src/components/Counter.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\nimport { DECREMENT, INCREMENT } from \"../redux/actions/action.constants\";\nconst Counter = (props) => {\n  console.log(\"Props in counter\", props);\n  return (\n    <div>\n      <p>Count : {props.count}</p>\n      <button onClick={props.incrementValue}>+ </button>\n      <button onClick={props.decrementValue}> -</button>\n    </div>\n  );\n};\n\n//connect -- HOC higer order component\n// function -- input component --  another component\n// connect -- input Counter --- output Counter connected to store and redux\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    incrementValue: () => {\n      return dispatch({ type: INCREMENT });\n    },\n    decrementValue: () => {\n      return dispatch({ type: DECREMENT });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,mCAArC;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACzBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;EACA,oBACE;IAAA,wBACE;MAAA,uBAAYA,KAAK,CAACG,KAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEH,KAAK,CAACI,cAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEJ,KAAK,CAACK,cAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CATD,C,CAWA;AACA;AACA;;;KAbMN,O;;AAcN,MAAMO,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLJ,KAAK,EAAEI,KAAK,CAACJ;EADR,CAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLL,cAAc,EAAE,MAAM;MACpB,OAAOK,QAAQ,CAAC;QAAEC,IAAI,EAAEZ;MAAR,CAAD,CAAf;IACD,CAHI;IAILO,cAAc,EAAE,MAAM;MACpB,OAAOI,QAAQ,CAAC;QAAEC,IAAI,EAAEb;MAAR,CAAD,CAAf;IACD;EANI,CAAP;AAQD,CATD;;AAWA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf"},"metadata":{},"sourceType":"module"}