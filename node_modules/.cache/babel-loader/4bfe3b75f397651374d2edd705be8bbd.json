{"ast":null,"code":"import { INCREMENT, DECREMENT } from \"../actionsConstants/actionConstants\";\nconst initialState = {\n  count: 0\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case INCREMENT:\n      return state + 1;\n\n    case DECREMENT:\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"names":["INCREMENT","DECREMENT","initialState","count","counterReducer","state","action","type"],"sources":["/home/anita/Project/redux-counter/src/redux/reducers/counterReducer.js"],"sourcesContent":["import { INCREMENT, DECREMENT } from \"../actionsConstants/actionConstants\";\n\nconst initialState = { count: 0 };\n\nconst counterReducer = (state = initialState, action) =>{\n  const {type} = action\n  switch(type){\n    case INCREMENT:\n      return state + 1;\n    case DECREMENT:\n      return state -1;\n    default: \n      return state\n  }\n}\n\nexport default counterReducer;\n\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,qCAArC;AAEA,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE;AAAT,CAArB;;AAEA,MAAMC,cAAc,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBH,YAAwB;EAAA,IAAVI,MAAU;EACtD,MAAM;IAACC;EAAD,IAASD,MAAf;;EACA,QAAOC,IAAP;IACE,KAAKP,SAAL;MACE,OAAOK,KAAK,GAAG,CAAf;;IACF,KAAKJ,SAAL;MACE,OAAOI,KAAK,GAAE,CAAd;;IACF;MACE,OAAOA,KAAP;EANJ;AAQD,CAVD;;AAYA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}